<ResourceDictionary
             xmlns="http://schemas.wodsoft.com/upf/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style x:Key="{x:Type ContentControl}"
       TargetType="{x:Type ContentControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" ContentStringFormat="{TemplateBinding ContentStringFormat}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ItemsControl}"
       TargetType="{x:Type ItemsControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ItemsControl}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}">
                        <ItemsPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type TextBox}"
       TargetType="{x:Type TextBox}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Cursor" Value="IBeam"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}">
                        <TextViewer CanContentScroll="true"
                                    HorizontalScrollBarVisibility="{TemplateBinding HorizontalScrollBarVisibility}"
                                    VerticalScrollBarVisibility="{TemplateBinding VerticalScrollBarVisibility}"
                                    TextAlignment="{TemplateBinding TextAlignment}"
                                    TextTrimming="CharacterEllipsis"
                                    TextWrapping="{TemplateBinding TextWrapping}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type Window}"
       TargetType="{x:Type Window}">
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        <Setter Property="Background"
                Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
						<ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" ContentStringFormat="{TemplateBinding ContentStringFormat}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--<Style.Triggers>
            <Trigger Property="Window.ResizeMode"
                     Value="CanResizeWithGrip">
                <Setter Property="Template"
                        Value="{StaticResource &#397;}"/>
            </Trigger>
        </Style.Triggers>-->
    </Style>

	<Style x:Key="{x:Type TextBlock}"
	   TargetType="{x:Type TextBlock}">
		<Setter Property="TextWrapping"
                Value="NoWrap"/>
		<Setter Property="TextTrimming"
                Value="None"/>
	</Style>

	<Style x:Key="{x:Type Bold}"
	   TargetType="{x:Type Bold}">
		<Setter Property="FontWeight"
                Value="Bold"/>
	</Style>
	
	<Style x:Key="{x:Type Italic}"
	   TargetType="{x:Type Italic}">
		<Setter Property="FontStyle"
                Value="Italic"/>
	</Style>
	
	<Style x:Key="{x:Type Underline}"
	   TargetType="{x:Type Underline}">
		<Setter Property="TextDecorations"
                Value="Underline"/>
	</Style>

	<SolidColorBrush x:Key="&#211;"
					 Color="#FF707070"/>
	
	<Style x:Key="&#212;"
        TargetType="{x:Type ButtonBase}">
		<!--<Setter Property="FocusVisualStyle" Value="{StaticResource &#209;}"/>
		<Setter Property="Background" alue="{StaticResource &#210;}"/>-->
		<Setter Property="BorderBrush" Value="{StaticResource &#211;}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Padding" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ButtonBase}">
					<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}">
						<ContentPresenter Margin="{TemplateBinding Padding}"
										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled"
								 Value="false">
							<Setter Property="Foreground"
									Value="#ADADAD"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="{x:Type Button}"
		   BasedOn="{StaticResource &#212;}"
		   TargetType="{x:Type Button}"/>

</ResourceDictionary>